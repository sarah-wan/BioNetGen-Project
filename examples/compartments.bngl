## title: LRR_comp.bngl
## Compartmental version of ligand-receptor binding and dimerization model expressed in cell units:
#     time - seconds
#     concentration - molecule number
#     length - um, area - um^2, volume - um^3
#     bimolecular association - um^3/s (3D), um^2/s (2D)
## author: Jim Faeder
## edited by Sarah Wan

begin model
begin parameters
	NaV 6.02e8 # Conversion constant: M -> #/um^3
	
 	Vcell 1000 # Typical eukaryotic cell volume ~ 1000 um^3
 	Vec   1000*Vcell # Volume of extracellular space around each cell (1/cell density)
 	
 	X 100 #Volume of Test1 
 	Y 10 #Volume of Test2
 	
 	d_pm  0.01 # Effective thickness of the plasma membrane (10 nm)
 	Acell 1000 # Approximate area of PM
 	Vpm   Acell*d_pm # Effective volume of PM 
 	lig_conc 1e-8 # Ligand concentration - molar 
 	L0 lig_conc*NaV*Vec # number of ligand molecules
 	R0 10000 # number of receptor molecules per cell
 
 	kp1 1e6/NaV # um^3/s: Forward binding rate constant for L-R
 	km1 0.01 # 1/s Reverse binding rate constant for L-R
 	chi 1.0 # Additional constraint factor for surface reaction.
end parameters

begin compartments
 	EC 3 Vec 
  	PM 2 Vpm EC
  	
  	Test1 2 X EC
  	Test2 3 Y Test1
  	
end compartments

begin molecule types
 	L(r,r) # L molecule has two binding sites for R
 	R(l) # R molecule has one binding site for L

 	S(t,t)
 	T(s)
end molecule types

begin species
 	@EC:L(r,r) L0/2 # L0 represents # of sites as opposed to molecules
 	@PM:R(l) R0
 	@Test2:T(s) R0
 	@PM:S(t,t) L0/2
end species

begin observables
  Molecules FreeR R(l)
  Molecules Bound L(r,r!1).R(l!1)
  Species   Dimers R(l!1).L(r!1,r!2).R(l!2)
  
  Molecules FreeT T(s)
  Molecules Bound2 S(t,t!1).T(s!1)
  Species   Dimers2 T(s!1).S(t!1,t!2).T(s!2)
end observables

begin reaction rules
	LBind:  L(r,r) + R(l) <-> L(r,r!1).R(l!1) kp1, km1
	Dimer:  R(l) + L(r,r!1).R(l!1) <-> R(l!2).L(r!2,r!1).R(l!1) chi*kp1, km1
	
	SBind:  S(t,t) + T(s) <-> S(t,t!1).T(s!1) kp1, km1
	Dimer2:  T(s) + S(t,t!1).T(s!1) <-> T(s!2).S(t!2,t!1).T(s!1) chi*kp1, km1
end reaction rules
end model

simulate({method=>"ode",t_end=>300,n_steps=>500})

#parameter_scan({method=>"ode",parameter=>"lig_conc",par_min=>1e-12,par_max=>1e-6,\
#                n_scan_pts=>50,log_scale=>1,t_end=>1000,n_steps=>2})
